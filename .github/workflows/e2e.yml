name: E2E

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  check-files:
    uses: ./.github/workflows/changed-files.yml
  test:
    name: Do playwright testing
    runs-on: ubuntu-latest
    needs: check-files
    if: success() && needs.check-files.outputs.code_changed == 'true'
    permissions:
      # only required for workflows in private repositories
      contents: write
    container:
      image: mcr.microsoft.com/playwright:v1.29.2-focal
      options: "--ipc=host"
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     project: [chromium, webkit]
    #     shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    #     shardTotal: [10]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      #
      # - name: Store Playwright's Version
      #   run: |
      #     PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test | grep @playwright | sed 's/.*@//')
      #     echo "Playwright's Version: $PLAYWRIGHT_VERSION"
      #     echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      #
      # - name: Cache Playwright Browsers for Playwright's Version
      #   id: cache-playwright-browsers
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/ms-playwright
      #     key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
      #
      # - name: Setup Playwright
      #   if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
      #   run: pnpm exec playwright install --with-deps
      #
      # - run: npx playwright install-deps
      #   if: steps.cache-playwright-browsers.outputs.cache-hit == 'true'

      - name: Run your tests
        run: HOME=/root pnpm run test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report

      - name: Store Artifacts from Failed Tests
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/
          retention-days: 7
  setup-pages:
    name: Setup pages for playwright
    runs-on: ubuntu-latest
    needs: [test]
    if: success() && github.ref == 'refs/heads/main'
    permissions:
      # only required for workflows in private repositories
      id-token: write
      pages: write

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Download report
        uses: actions/download-artifact@v3
        with:
          name: playwright-report
          path: playwright-report

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: playwright-report/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
